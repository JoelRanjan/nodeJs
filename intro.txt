1.what is node js?
    node js is a runtime environment for javascript
    it is used to execute js programs outside the browser
    not a library or framework
    js engine + c++

--> npm : node package manager

2.How to install node js?
    download it in the official site. download lts version(long term support) . not to download the beta version.

3.How to write a programs?
     write normal js program and while running enter 'node filename'
     here in nodejs only few js functionality have been taken , dom manulplation like window obj will not be there
     eg: console.log("hi") // hi
         console.log(window) // referrence error

4. what is modular programming?
   converting entire code to small modules and using them is called modular programming
   export a module --> module.exports = {fnNames, fn1, fn2}
   import a module --> const name = require("./path") 
        if we give "./.." it checks in the current path
        if dont give "./" it checks the name of the module in the builtin packages

5.what is file handling in nodejs?
    we would require a package "fs"
    we can read,write, create,append,delete files
    we can also create a folder and get stats of the file
    --> refer file.js

6.How nodejs works(architecture)?
    whenever client raises a request, requests will be set into the "event queue" , event loop will check each request whether its a blocking 
    or non blocking request. then it executes instatntly if its non blocking request.
    otherwise it will send the request to a "thread pool" to execute.
    Treadpool has workers. each worker will take each request and execute.
    default no. of workers in threadpool == 4
    to check no of workers ==> os.cpus().length
    check img folder for architecturescreenshots

7. how to start a own server?
    import http module
    create server by http.createserver
    create a port which listens the server
    refer server folder

URL --> uniform resource locator

8.What is URL?
    it is a user friendly name for an ip of the website
    https//:www.google.com/gadgets?a=1&b=2
    https// : protocal
    www.google.com : Domain
    /gadgets : path
    ?a=1&b=2 : query parameters

    install url package to get the clear data of url

9.What are http methods?
    GET --> gets the data from the server
    POST --> sends and mutates the data
    PUT --> if you want to put data in the database like images or files
    PATCH --> if you want to change an existing data
    DELETE --> if ou want to delete data for ex: user

10. What is Express js? why do we use it?
    Express is a framework used on node js. It is used to increase the productivity and gives lot of features to build web page.

11. Describe about versioning?
    ex:"^4.17.3"
    3 --> last part --> minor fixes --> update is optional
    17 --> recommended bug fixes or a new functionality added --> have to update
    4 --> major fix --> should not update untill we are sure about the change bought in.
    ^ --> auto update minor and recommended fixes but not major fix
    ~ --> auto update only minor fixes

12.What are RESTful APIs?
    API are the connection between client and the server to exchange the data.
    RESTfil APIs are the apis following some architectural constraints.

13. What are middlewares?
    A function which has acces for requesting an object,responding to an object and moving to the next middleware function in the application 
    request response cycle

14.What are HTTP HEADERS?
    These are important part of api request and response, which has meta-data associated with the apis request and response
    Headers carry info for the reqest and response
    always add x- to custom headers eg: res.setHeader("x-myName","joel")

15.what are status codes?
    1.informational(100 - 199)
    2.successful(200-299)
    3.redirectional(300-399)
    4.clientside error(400 - 499)
    5.serverside error(500-599)

16.what is mongoDB?
    its a non relational database which has set of collections in it.
    to connect mongoDB to nodejs , install mongoose

17.How to use mongoDB?
    we will have a schema in mongoDB.we will define a structure init. through schema we will make a mmodel.
    using model, we do CRUD operations.

18.requirement to start a project?
    npn init
    npm i express
    npm i mongoose

19. stateful authentication and stateless authentication?